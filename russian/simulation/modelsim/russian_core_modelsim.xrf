vendor_name = ModelSim
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/apu/Verilog/NOISE_TABLE.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/apu/Verilog/LENGTH_TABLE.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/apu/Verilog/DPCM_TABLE.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/ppu/Verilog/PALETTE_RGB_TABLE.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/ppu/Verilog/PALETTE_RAM.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/ppu/Verilog/OAM2_RAM.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/ppu/Verilog/OAM_RAM.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/cpu/Verilog/MOS6502_WBCD.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/ppu/Verilog/RP2C02.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/apu/Verilog/RP2A03.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/russian_core.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/nbitlatch.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/singleportram.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/Waveform.vwf
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/ls139.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/clkpll.qip
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/clkpll.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/clkpll/clkpll_0002.v
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/clkpll/clkpll_0002.qip
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/clkpll.sip
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/clock_divider.v
source_file = 1, Waveform1.vwf
source_file = 1, output_files/Waveform.vwf
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/altera_pll.v
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/altsyncram.tdf
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/stratix_ram_block.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/lpm_mux.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/lpm_decode.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/aglobal201.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/a_rdenreg.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/altrom.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/altram.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/altdpram.inc
source_file = 1, c:/intelfpga_lite/20.1/quartus/libraries/megafunctions/cbx.lst
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_cud1.tdf
source_file = 1, noise_table.mif
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_9pd1.tdf
source_file = 1, dpcm_table.mif
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_60e1.tdf
source_file = 1, length_table.mif
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_i6h1.tdf
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_n4h1.tdf
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_0eg1.tdf
source_file = 1, C:/Users/steve/git_repos/school/cen3907/NES_fpga_development/hardware_development/russian/db/altsyncram_o2f1.tdf
source_file = 1, palette_rgb_table_ntsc.mif
design_name = russian_core
instance = comp, \debug_addressoutput[0]~output , debug_addressoutput[0]~output, russian_core, 1
instance = comp, \debug_addressoutput[1]~output , debug_addressoutput[1]~output, russian_core, 1
instance = comp, \debug_addressoutput[2]~output , debug_addressoutput[2]~output, russian_core, 1
instance = comp, \debug_addressoutput[3]~output , debug_addressoutput[3]~output, russian_core, 1
instance = comp, \debug_addressoutput[4]~output , debug_addressoutput[4]~output, russian_core, 1
instance = comp, \debug_addressoutput[5]~output , debug_addressoutput[5]~output, russian_core, 1
instance = comp, \debug_addressoutput[6]~output , debug_addressoutput[6]~output, russian_core, 1
instance = comp, \debug_addressoutput[7]~output , debug_addressoutput[7]~output, russian_core, 1
instance = comp, \debug_addressoutput[8]~output , debug_addressoutput[8]~output, russian_core, 1
instance = comp, \debug_addressoutput[9]~output , debug_addressoutput[9]~output, russian_core, 1
instance = comp, \debug_addressoutput[10]~output , debug_addressoutput[10]~output, russian_core, 1
instance = comp, \debug_addressoutput[11]~output , debug_addressoutput[11]~output, russian_core, 1
instance = comp, \debug_addressoutput[12]~output , debug_addressoutput[12]~output, russian_core, 1
instance = comp, \debug_addressoutput[13]~output , debug_addressoutput[13]~output, russian_core, 1
instance = comp, \debug_addressoutput[14]~output , debug_addressoutput[14]~output, russian_core, 1
instance = comp, \debug_addressoutput[15]~output , debug_addressoutput[15]~output, russian_core, 1
instance = comp, \debug_dataoutput[0]~output , debug_dataoutput[0]~output, russian_core, 1
instance = comp, \debug_dataoutput[1]~output , debug_dataoutput[1]~output, russian_core, 1
instance = comp, \debug_dataoutput[2]~output , debug_dataoutput[2]~output, russian_core, 1
instance = comp, \debug_dataoutput[3]~output , debug_dataoutput[3]~output, russian_core, 1
instance = comp, \debug_dataoutput[4]~output , debug_dataoutput[4]~output, russian_core, 1
instance = comp, \debug_dataoutput[5]~output , debug_dataoutput[5]~output, russian_core, 1
instance = comp, \debug_dataoutput[6]~output , debug_dataoutput[6]~output, russian_core, 1
instance = comp, \debug_dataoutput[7]~output , debug_dataoutput[7]~output, russian_core, 1
instance = comp, \debug_clk~output , debug_clk~output, russian_core, 1
instance = comp, \clk50mhz~input , clk50mhz~input, russian_core, 1
instance = comp, \nesclk|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT , nesclk|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT, russian_core, 1
instance = comp, \rstn~input , rstn~input, russian_core, 1
instance = comp, \nesclk|altera_pll_i|general[0].gpll~FRACTIONAL_PLL , nesclk|altera_pll_i|general[0].gpll~FRACTIONAL_PLL, russian_core, 1
instance = comp, \nesclk|altera_pll_i|general[0].gpll~PLL_RECONFIG , nesclk|altera_pll_i|general[0].gpll~PLL_RECONFIG, russian_core, 1
instance = comp, \nesclk|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER , nesclk|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER, russian_core, 1
instance = comp, \nesclk|altera_pll_i|outclk_wire[0]~CLKENA0 , nesclk|altera_pll_i|outclk_wire[0]~CLKENA0, russian_core, 1
instance = comp, \clkdivider|Add0~97 , clkdivider|Add0~97, russian_core, 1
instance = comp, \clkdivider|Add0~93 , clkdivider|Add0~93, russian_core, 1
instance = comp, \clkdivider|counter[1] , clkdivider|counter[1], russian_core, 1
instance = comp, \clkdivider|Add0~89 , clkdivider|Add0~89, russian_core, 1
instance = comp, \clkdivider|counter[2] , clkdivider|counter[2], russian_core, 1
instance = comp, \clkdivider|Add0~85 , clkdivider|Add0~85, russian_core, 1
instance = comp, \clkdivider|counter[3] , clkdivider|counter[3], russian_core, 1
instance = comp, \clkdivider|Add0~81 , clkdivider|Add0~81, russian_core, 1
instance = comp, \clkdivider|counter[4] , clkdivider|counter[4], russian_core, 1
instance = comp, \clkdivider|Add0~77 , clkdivider|Add0~77, russian_core, 1
instance = comp, \clkdivider|counter[5] , clkdivider|counter[5], russian_core, 1
instance = comp, \clkdivider|Add0~73 , clkdivider|Add0~73, russian_core, 1
instance = comp, \clkdivider|counter[6] , clkdivider|counter[6], russian_core, 1
instance = comp, \clkdivider|Add0~69 , clkdivider|Add0~69, russian_core, 1
instance = comp, \clkdivider|counter[7] , clkdivider|counter[7], russian_core, 1
instance = comp, \clkdivider|Add0~65 , clkdivider|Add0~65, russian_core, 1
instance = comp, \clkdivider|counter[8] , clkdivider|counter[8], russian_core, 1
instance = comp, \clkdivider|Add0~101 , clkdivider|Add0~101, russian_core, 1
instance = comp, \clkdivider|counter[9] , clkdivider|counter[9], russian_core, 1
instance = comp, \clkdivider|Add0~13 , clkdivider|Add0~13, russian_core, 1
instance = comp, \clkdivider|counter[10] , clkdivider|counter[10], russian_core, 1
instance = comp, \clkdivider|Add0~9 , clkdivider|Add0~9, russian_core, 1
instance = comp, \clkdivider|counter[11] , clkdivider|counter[11], russian_core, 1
instance = comp, \clkdivider|counter[13] , clkdivider|counter[13], russian_core, 1
instance = comp, \clkdivider|Add0~5 , clkdivider|Add0~5, russian_core, 1
instance = comp, \clkdivider|counter[12] , clkdivider|counter[12], russian_core, 1
instance = comp, \clkdivider|Add0~1 , clkdivider|Add0~1, russian_core, 1
instance = comp, \clkdivider|counter[13]~DUPLICATE , clkdivider|counter[13]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|Equal0~0 , clkdivider|Equal0~0, russian_core, 1
instance = comp, \clkdivider|Add0~37 , clkdivider|Add0~37, russian_core, 1
instance = comp, \clkdivider|counter[14] , clkdivider|counter[14], russian_core, 1
instance = comp, \clkdivider|Add0~33 , clkdivider|Add0~33, russian_core, 1
instance = comp, \clkdivider|counter[15] , clkdivider|counter[15], russian_core, 1
instance = comp, \clkdivider|Add0~29 , clkdivider|Add0~29, russian_core, 1
instance = comp, \clkdivider|counter[16] , clkdivider|counter[16], russian_core, 1
instance = comp, \clkdivider|Add0~25 , clkdivider|Add0~25, russian_core, 1
instance = comp, \clkdivider|counter[17] , clkdivider|counter[17], russian_core, 1
instance = comp, \clkdivider|Add0~21 , clkdivider|Add0~21, russian_core, 1
instance = comp, \clkdivider|counter[18] , clkdivider|counter[18], russian_core, 1
instance = comp, \clkdivider|Add0~109 , clkdivider|Add0~109, russian_core, 1
instance = comp, \clkdivider|counter[19]~DUPLICATE , clkdivider|counter[19]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|Add0~17 , clkdivider|Add0~17, russian_core, 1
instance = comp, \clkdivider|counter[20] , clkdivider|counter[20], russian_core, 1
instance = comp, \clkdivider|Equal0~1 , clkdivider|Equal0~1, russian_core, 1
instance = comp, \clkdivider|counter[27] , clkdivider|counter[27], russian_core, 1
instance = comp, \clkdivider|Add0~61 , clkdivider|Add0~61, russian_core, 1
instance = comp, \clkdivider|counter[21] , clkdivider|counter[21], russian_core, 1
instance = comp, \clkdivider|Add0~57 , clkdivider|Add0~57, russian_core, 1
instance = comp, \clkdivider|counter[22] , clkdivider|counter[22], russian_core, 1
instance = comp, \clkdivider|Add0~53 , clkdivider|Add0~53, russian_core, 1
instance = comp, \clkdivider|counter[23]~DUPLICATE , clkdivider|counter[23]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|Add0~49 , clkdivider|Add0~49, russian_core, 1
instance = comp, \clkdivider|counter[24]~DUPLICATE , clkdivider|counter[24]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|Add0~105 , clkdivider|Add0~105, russian_core, 1
instance = comp, \clkdivider|counter[25] , clkdivider|counter[25], russian_core, 1
instance = comp, \clkdivider|Add0~45 , clkdivider|Add0~45, russian_core, 1
instance = comp, \clkdivider|counter[26] , clkdivider|counter[26], russian_core, 1
instance = comp, \clkdivider|Add0~41 , clkdivider|Add0~41, russian_core, 1
instance = comp, \clkdivider|counter[27]~DUPLICATE , clkdivider|counter[27]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|counter[21]~DUPLICATE , clkdivider|counter[21]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|counter[23] , clkdivider|counter[23], russian_core, 1
instance = comp, \clkdivider|counter[24] , clkdivider|counter[24], russian_core, 1
instance = comp, \clkdivider|Equal0~2 , clkdivider|Equal0~2, russian_core, 1
instance = comp, \clkdivider|Equal0~3 , clkdivider|Equal0~3, russian_core, 1
instance = comp, \clkdivider|Equal0~5 , clkdivider|Equal0~5, russian_core, 1
instance = comp, \clkdivider|counter[0] , clkdivider|counter[0], russian_core, 1
instance = comp, \clkdivider|counter[25]~DUPLICATE , clkdivider|counter[25]~DUPLICATE, russian_core, 1
instance = comp, \clkdivider|counter[19] , clkdivider|counter[19], russian_core, 1
instance = comp, \clkdivider|Equal0~4 , clkdivider|Equal0~4, russian_core, 1
instance = comp, \clkdivider|out~0 , clkdivider|out~0, russian_core, 1
instance = comp, \clkdivider|out , clkdivider|out, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[0]~7 , apu|MOD_SPRITE_DMA|SPRA1[0]~7, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV5~0 , apu|MOD_CDIV|DIV5~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV5 , apu|MOD_CDIV|DIV5, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV4~0 , apu|MOD_CDIV|DIV4~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV4 , apu|MOD_CDIV|DIV4, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV3~0 , apu|MOD_CDIV|DIV3~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV3 , apu|MOD_CDIV|DIV3, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV2~0 , apu|MOD_CDIV|DIV2~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV2 , apu|MOD_CDIV|DIV2, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIVM2~0 , apu|MOD_CDIV|DIVM2~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV1~feeder , apu|MOD_CDIV|DIV1~feeder, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV1 , apu|MOD_CDIV|DIV1, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIV0 , apu|MOD_CDIV|DIV0, russian_core, 1
instance = comp, \apu|MOD_CDIV|nACLK2~0 , apu|MOD_CDIV|nACLK2~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIVACLK1 , apu|MOD_CDIV|DIVACLK1, russian_core, 1
instance = comp, \apu|MOD_CDIV|DIVACLK2 , apu|MOD_CDIV|DIVACLK2, russian_core, 1
instance = comp, \apu|MOD_CDIV|ACLK1~0 , apu|MOD_CDIV|ACLK1~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[0] , apu|MOD_SPRITE_DMA|SPRA1[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|STEP_LATCH~0 , apu|LENGTH_COUNTER_TRI|STEP_LATCH~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|STEP_LATCH , apu|LENGTH_COUNTER_TRI|STEP_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0LATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0LATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0LATCH~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0LATCH~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|RESPR1~feeder , apu|MOD_MOS6502_WBCD|RESPR1~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|RESPR1 , apu|MOD_MOS6502_WBCD|RESPR1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|RESPR2 , apu|MOD_MOS6502_WBCD|RESPR2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS2LATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS2LATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS2LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS2LATCH, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|NO_SPR , apu|MOD_SPRITE_DMA|NO_SPR, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|RDY , apu|MOD_SPRITE_DMA|RDY, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|RDYDELAY1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|RDYDELAY1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STEPLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STEPLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STEPLATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STEPLATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STEPLATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STEPLATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|always0~0 , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|always0~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[2]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[2]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|RUNDMC , apu|MOD_DPCM_CHANNEL|RUNDMC, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|DIR_TOGGLE_FF~0 , apu|MOD_SPRITE_DMA|DIR_TOGGLE_FF~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|DIR_TOGGLE_FF~feeder , apu|MOD_SPRITE_DMA|DIR_TOGGLE_FF~feeder, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|DIR_TOGGLE_FF , apu|MOD_SPRITE_DMA|DIR_TOGGLE_FF, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|RnW~0 , apu|MOD_SPRITE_DMA|RnW~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[7] , apu|MOD_SPRITE_DMA|SPR_AD[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|nPRDYR1 , apu|MOD_MOS6502_WBCD|nPRDYR1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|nPRDYR2 , apu|MOD_MOS6502_WBCD|nPRDYR2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH2~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH2~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|B_OUT~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|B_OUT~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~17 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~17, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_PCM_FF~0 , apu|MOD_DPCM_CHANNEL|DMC_PCM_FF~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_PCM_FF , apu|MOD_DPCM_CHANNEL|DMC_PCM_FF, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_PCM_LATCH~0 , apu|MOD_DPCM_CHANNEL|DMC_PCM_LATCH~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_PCM_LATCH~DUPLICATE , apu|MOD_DPCM_CHANNEL|DMC_PCM_LATCH~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_INT_FF~0 , apu|MOD_DPCM_CHANNEL|DMC_INT_FF~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~0 , apu|MOD_SPRITE_DMA|SPRA1~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[1] , apu|MOD_SPRITE_DMA|SPRA1[1], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[1] , apu|MOD_SPRITE_DMA|SPRA[1], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~1 , apu|MOD_SPRITE_DMA|SPRA1~1, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[2] , apu|MOD_SPRITE_DMA|SPRA1[2], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[2] , apu|MOD_SPRITE_DMA|SPRA[2], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~2 , apu|MOD_SPRITE_DMA|SPRA1~2, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[3] , apu|MOD_SPRITE_DMA|SPRA1[3], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[3]~feeder , apu|MOD_SPRITE_DMA|SPRA[3]~feeder, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[3] , apu|MOD_SPRITE_DMA|SPRA[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~0 , apu|MOD_DPCM_CHANNEL|DMC_A1~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[1] , apu|MOD_DPCM_CHANNEL|DMC_A1[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A~0 , apu|MOD_DPCM_CHANNEL|DMC_A~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|EN_LATCH2~0 , apu|MOD_DPCM_CHANNEL|EN_LATCH2~0, russian_core, 1
instance = comp, \apu|MOD_CDIV|nACLK2 , apu|MOD_CDIV|nACLK2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|EN_LATCH2 , apu|MOD_DPCM_CHANNEL|EN_LATCH2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|EN_LATCH3~0 , apu|MOD_DPCM_CHANNEL|EN_LATCH3~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|EN_LATCH3 , apu|MOD_DPCM_CHANNEL|EN_LATCH3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|always0~0 , apu|MOD_DPCM_CHANNEL|always0~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[1] , apu|MOD_DPCM_CHANNEL|DMC_A[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~1 , apu|MOD_DPCM_CHANNEL|DMC_A1~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[2] , apu|MOD_DPCM_CHANNEL|DMC_A1[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A~1 , apu|MOD_DPCM_CHANNEL|DMC_A~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[2] , apu|MOD_DPCM_CHANNEL|DMC_A[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~2 , apu|MOD_DPCM_CHANNEL|DMC_A1~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[3] , apu|MOD_DPCM_CHANNEL|DMC_A1[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A~2 , apu|MOD_DPCM_CHANNEL|DMC_A~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[3] , apu|MOD_DPCM_CHANNEL|DMC_A[3], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|always0~0 , apu|MOD_SPRITE_DMA|always0~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~3 , apu|MOD_DPCM_CHANNEL|DMC_A1~3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[4] , apu|MOD_DPCM_CHANNEL|DMC_A1[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A~3 , apu|MOD_DPCM_CHANNEL|DMC_A~3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[4] , apu|MOD_DPCM_CHANNEL|DMC_A[4], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~3 , apu|MOD_SPRITE_DMA|SPRA1~3, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[4] , apu|MOD_SPRITE_DMA|SPRA1[4], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[4] , apu|MOD_SPRITE_DMA|SPRA[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[5] , apu|MOD_MOS6502_WBCD|DL_LATCH[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[5] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[5] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[5]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[5]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[4] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~0 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[0] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[1] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PC_DB~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PC_DB~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~18 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~18, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STKOP~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STKOP~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STKOP~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STKOP~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STKOP~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STKOP~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~6 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[7] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STOR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STOR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STOR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STOR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~7 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_SR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_SR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_SR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_SR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_S~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_S~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[6] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[6] , apu|MOD_MOS6502_WBCD|S_REG[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|JB~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|JB~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nPCH_PCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nPCH_PCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~4 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nPCL_ADL~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nPCL_ADL~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_ADLR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_ADLR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~4 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~5 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nADL_ADD~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADL_ADDR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADL_ADDR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|BRX~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|BRX~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BR2_LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BR2_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BRFW2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BRFW2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~14 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH17R~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH17R~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH17R~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH17R~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH17R , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH17R, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_ADHR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_ADHR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_ADHR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_ADHR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[7]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[7]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~7 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[7] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~12 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~12, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1XLATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1XLATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1XLATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1XLATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~16 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~16, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~9 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~9, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~10 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~10, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|nSB_AC~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_ACR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_ACR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_AC~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_AC~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[6] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_YR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_YR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_Y~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_Y~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[6] , apu|MOD_MOS6502_WBCD|Y_REG[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~8 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~8, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRES2LATCH~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRES2LATCH~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[6] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nMEMOP~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nMEMOP~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nMEMOP~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nMEMOP~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STXY~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|STXY~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[6]~12 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[6]~12, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[6]~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[6]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nSHIFT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nSHIFT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T67~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T67~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T67 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T67, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T62~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T62~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T62 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T62, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T61~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T61~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T61~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T61~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T71~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T71~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T71 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T71, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T7~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T7~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T7 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB7~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB7~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB06R , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB06R, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~13 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~13, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_SB~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_SB~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[6] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[6]~13 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[6]~13, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[6] , apu|MOD_MOS6502_WBCD|X_REG[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STOR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|STOR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SB~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|X_SB~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[6]~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[6]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~6 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[6] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[5] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~5 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[5] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~7 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[7] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[7]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[7]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~21 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~21, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|IR5_C , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|IR5_C, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T61 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T61, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~1 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~2 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_P~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_P~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_CR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_CR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_CR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_CR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[0] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH0R , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|Z_ADH0R, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_DBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_DBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADL_PCLR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADL_PCLR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[0]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[0]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~4 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|INC_SB~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~4 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~5 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADDR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADD~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|Z_ADD~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[0] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~0 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|always0~0 , apu|MOD_MOS6502_WBCD|MOD_ALU|always0~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[0] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~19 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~19, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ACIN1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nACIN~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nACIN~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nACIN , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|nACIN, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|OR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|OR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~26 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~26, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT~0 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SRS1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SRS1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SRS , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SRS, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1~5 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC3~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC3~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC3~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC3~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~1 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[1] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~1 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[1] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|IPC3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[0] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH_IN~0 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH_IN~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[2]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[2]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~2 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[2] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~2 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[2] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~20 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~20, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_DBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_DBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_DBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_DBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~4 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[2] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[2]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[2]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|P_DBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|P_DBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|P_DBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|P_DBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[1] , apu|MOD_MOS6502_WBCD|X_REG[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_SBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[1] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[1] , apu|MOD_MOS6502_WBCD|Y_REG[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|Y_SBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[1]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[1]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~1 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[1]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[1]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[1]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[1]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[1]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[1]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~1 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[1] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[2] , apu|MOD_MOS6502_WBCD|Y_REG[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[2]~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[2]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[2] , apu|MOD_MOS6502_WBCD|X_REG[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[2]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[2]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[2]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[2]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[2]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[2]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~2 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[2] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[3] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~3 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[3] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[3] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[3]~10 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[3]~10, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[3]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[3]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~3 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[3] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~3 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[3] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~24 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~24, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|IR5_D , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|IR5_D, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|D_LATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|D_LATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nD_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nD_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nD_OUT , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nD_OUT, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[3]~9 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[3]~9, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[3]~11 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[3]~11, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[3]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[3]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~3 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[3] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT~5 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ANDS1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ANDS1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ANDS , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ANDS, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|EORS1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|EORS1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|EORS , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|EORS, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ORS1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ORS1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ORS , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ORS, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[2]~6 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[2]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[1] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[1] , apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|SUMS~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[2]~7 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[2]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[2] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[2] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[2] , apu|MOD_MOS6502_WBCD|S_REG[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[2]~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[2]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[2]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[2]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[2] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~2 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[2] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~2 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[2]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[2]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[2]~8 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[2]~8, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[2]~10 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[2]~10, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[2] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[1]~3 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[1]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|SUMo[1] , apu|MOD_MOS6502_WBCD|MOD_ALU|SUMo[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[1]~4 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[1]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[1] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_SB , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_SB, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[1]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[1]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[1]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[1]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[1] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_DBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|AC_DBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[1]~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[1]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[1]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[1]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[1]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[1]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nZ_OUT , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nZ_OUT, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|Z_LATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|Z_LATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB06R~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB06R~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[4] , apu|MOD_MOS6502_WBCD|S_REG[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~4 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[4] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[4] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[3] , apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[6]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[6]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[5] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[5]~13 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[5]~13, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[5]~14 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[5]~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|XORo[5] , apu|MOD_MOS6502_WBCD|MOD_ALU|XORo[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[5]~15 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[5]~15, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[5]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[5]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[5]~11 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[5]~11, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[5] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[5] , apu|MOD_MOS6502_WBCD|Y_REG[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[5]~10 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[5]~10, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[5] , apu|MOD_MOS6502_WBCD|X_REG[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[5]~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[5]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[5]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[5]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~5 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[5] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[4]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[4]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~4 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[4] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~4 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[4] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH_IN~1 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH_IN~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~5 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[5] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_DBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[5]~15 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[5]~15, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[5]~16 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[5]~16, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[5]~13 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[5]~13, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[5] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[5] , apu|MOD_MOS6502_WBCD|S_REG[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[5] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[5]~10 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[5]~10, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[5]~11 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[5]~11, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[5]~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[5]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~5 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[5] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[4]~10 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[4]~10, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[4]~11 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[4]~11, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[4]~12 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[4]~12, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[4] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[4]~9 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[4]~9, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[4] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[4] , apu|MOD_MOS6502_WBCD|Y_REG[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[4]~8 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[4]~8, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[4] , apu|MOD_MOS6502_WBCD|X_REG[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_ADHR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_ADHR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[4]~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[4]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[4]~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[4]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[4]~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[4]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nDBZ~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nDBZ~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nDBZ , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nDBZ, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nZ_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nZ_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nZ_OUT~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nZ_OUT~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|P_DBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|P_DBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[1]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[1]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[1]~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[1]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[1]~9 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[1]~9, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[1] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[1] , apu|MOD_MOS6502_WBCD|S_REG[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|Z_ADL1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|Z_ADL1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|Z_ADL1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|Z_ADL1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[1]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[1]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[1]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[1]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~1 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[1] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[0]~1 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[0]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[0]~2 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[0]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[0] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[0]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[0]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~0 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[0]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[0]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~0 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[0] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nC_OUT~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nC_OUT~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[0] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[0]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[0]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[0]~2 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[0]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[0]~8 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[0]~8, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[0] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[0] , apu|MOD_MOS6502_WBCD|S_REG[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[0]~1 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[0]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[0] , apu|MOD_MOS6502_WBCD|X_REG[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[0] , apu|MOD_MOS6502_WBCD|Y_REG[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nC_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nC_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nC_OUT , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nC_OUT, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|COUT_LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|COUT_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|MUX_LATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|MUX_LATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|MUX_LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|MUX_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH1~feeder , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH1~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|FFLATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~15 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~15, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB7~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB7~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB7 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_SB7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[7]~feeder , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[7]~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[7] , apu|MOD_MOS6502_WBCD|MOD_ALU|ACC[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[7]~21 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[7]~21, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[7]~DUPLICATE , apu|MOD_MOS6502_WBCD|S_REG[7]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|ADD_ADLR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[6] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[7] , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~7 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[7] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|XORo[7] , apu|MOD_MOS6502_WBCD|MOD_ALU|XORo[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[7]~19 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[7]~19, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[5] , apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[5], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[7]~20 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[7]~20, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[7]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[7]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[7]~14 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[7]~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[7]~15 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[7]~15, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~7 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[7] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[6] , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~7 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[7] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[7]~20 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[7]~20, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[7]~22 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[7]~22, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[7]~15 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[7]~15, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[7] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[7] , apu|MOD_MOS6502_WBCD|S_REG[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[7] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[7]~15 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[7]~15, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[7] , apu|MOD_MOS6502_WBCD|Y_REG[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[7]~14 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[7]~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[7] , apu|MOD_MOS6502_WBCD|X_REG[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[7]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[7]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[7]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[7]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BRFW~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BRFW~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BRFW , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|BRFW, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|BRX~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|BRX~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|DB_ADDR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|NDB_ADDR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|NDB_ADDR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI~6 , apu|MOD_MOS6502_WBCD|MOD_ALU|BI~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|BI[6] , apu|MOD_MOS6502_WBCD|MOD_ALU|BI[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[6]~16 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[6]~16, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[6]~17 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[6]~17, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[6]~18 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[6]~18, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[6]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[6]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL~6 , apu|MOD_MOS6502_WBCD|MOD_PC|PCL~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCL[6] , apu|MOD_MOS6502_WBCD|MOD_PC|PCL[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[6]~12 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[6]~12, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[6]~13 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[6]~13, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADL_ABLR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADL_ABLR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADL_ABLR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADL_ABLR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|always0~0 , apu|MOD_MOS6502_WBCD|always0~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[6] , apu|MOD_MOS6502_WBCD|ABL_LATCH[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|RDYDELAY2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|RDYDELAY2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ACRL1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ACRL1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ACRL_LATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ACRL_LATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ACRL2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ACRL2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|COMPLATCH2~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|COMPLATCH2~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|a~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|a~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADH_ABHR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADH_ABHR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADH_ABHR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADH_ABHR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADH_ABHR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|ADH_ABHR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|always0~1 , apu|MOD_MOS6502_WBCD|always0~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[6] , apu|MOD_MOS6502_WBCD|ABH_LATCH[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[7] , apu|MOD_MOS6502_WBCD|ABL_LATCH[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[7] , apu|MOD_MOS6502_WBCD|ABH_LATCH[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[5] , apu|MOD_MOS6502_WBCD|ABL_LATCH[5], russian_core, 1
instance = comp, \apu|MOD_REG_SEL|REGWR~1 , apu|MOD_REG_SEL|REGWR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY2~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY2~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[2] , apu|MOD_MOS6502_WBCD|ABH_LATCH[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[0]~0 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[0] , apu|MOD_MOS6502_WBCD|ABH_LATCH[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|SUMo[3] , apu|MOD_MOS6502_WBCD|MOD_ALU|SUMo[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[3]~8 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[3]~8, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[3]~9 , apu|MOD_MOS6502_WBCD|MOD_ALU|RESULT[3]~9, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[3] , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[3]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[3]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[3]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[3]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|Y_REG[3] , apu|MOD_MOS6502_WBCD|Y_REG[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[3]~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SBT[3]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[3]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[3]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[3] , apu|MOD_MOS6502_WBCD|ABH_LATCH[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[1] , apu|MOD_MOS6502_WBCD|ABH_LATCH[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[4]~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[4]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[4] , apu|MOD_MOS6502_WBCD|ABH_LATCH[4], russian_core, 1
instance = comp, \apu|MOD_REG_SEL|REGWR~0 , apu|MOD_REG_SEL|REGWR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[3]~DUPLICATE , apu|MOD_MOS6502_WBCD|ABL_LATCH[3]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[3]~19 , apu|MOD_SPRITE_DMA|ADR[3]~19, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[3]~20 , apu|MOD_SPRITE_DMA|ADR[3]~20, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|nR4015~0 , apu|MOD_REG_SEL|nR4015~0, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4003~0 , apu|MOD_REG_SEL|W4003~0, russian_core, 1
instance = comp, \apu|MOD_LFO|CLEAR_FF~0 , apu|MOD_LFO|CLEAR_FF~0, russian_core, 1
instance = comp, \apu|MOD_LFO|CLEAR_FF , apu|MOD_LFO|CLEAR_FF, russian_core, 1
instance = comp, \apu|MOD_LFO|CLEAR_LATCH~0 , apu|MOD_LFO|CLEAR_LATCH~0, russian_core, 1
instance = comp, \apu|MOD_LFO|CLEAR_LATCH , apu|MOD_LFO|CLEAR_LATCH, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~15 , apu|MOD_LFO|LFSR1~15, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[2] , apu|MOD_LFO|LFSR1[2], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[2] , apu|MOD_LFO|SOUT[2], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~16 , apu|MOD_LFO|LFSR1~16, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[3] , apu|MOD_LFO|LFSR1[3], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[3] , apu|MOD_LFO|SOUT[3], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~17 , apu|MOD_LFO|LFSR1~17, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[4] , apu|MOD_LFO|LFSR1[4], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[4] , apu|MOD_LFO|SOUT[4], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~5 , apu|MOD_LFO|LFSR1~5, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[5] , apu|MOD_LFO|LFSR1[5], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[5] , apu|MOD_LFO|SOUT[5], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~6 , apu|MOD_LFO|LFSR1~6, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[6] , apu|MOD_LFO|LFSR1[6], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[6] , apu|MOD_LFO|SOUT[6], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~13 , apu|MOD_LFO|LFSR1~13, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[7] , apu|MOD_LFO|LFSR1[7], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[7] , apu|MOD_LFO|SOUT[7], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~14 , apu|MOD_LFO|LFSR1~14, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[8] , apu|MOD_LFO|LFSR1[8], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[8] , apu|MOD_LFO|SOUT[8], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~11 , apu|MOD_LFO|LFSR1~11, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[9] , apu|MOD_LFO|LFSR1[9], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[9] , apu|MOD_LFO|SOUT[9], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~1 , apu|MOD_LFO|LFSR1~1, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[10] , apu|MOD_LFO|LFSR1[10], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[10] , apu|MOD_LFO|SOUT[10], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~2 , apu|MOD_LFO|LFSR1~2, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[11] , apu|MOD_LFO|LFSR1[11], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[11] , apu|MOD_LFO|SOUT[11], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~3 , apu|MOD_LFO|LFSR1~3, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[12] , apu|MOD_LFO|LFSR1[12], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[12] , apu|MOD_LFO|SOUT[12], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~7 , apu|MOD_LFO|LFSR1~7, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~4 , apu|MOD_LFO|LFSR1~4, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[13] , apu|MOD_LFO|LFSR1[13], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[13] , apu|MOD_LFO|SOUT[13], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~8 , apu|MOD_LFO|LFSR1~8, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~9 , apu|MOD_LFO|LFSR1~9, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[0] , apu|MOD_LFO|LFSR1[0], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[0] , apu|MOD_LFO|SOUT[0], russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~10 , apu|MOD_LFO|LFSR1~10, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[1] , apu|MOD_LFO|LFSR1[1], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[1] , apu|MOD_LFO|SOUT[1], russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~4 , apu|MOD_LFO|NTSC_PLA~4, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~0 , apu|MOD_LFO|LFSR1~0, russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~1 , apu|MOD_LFO|NTSC_PLA~1, russian_core, 1
instance = comp, \apu|MOD_LFO|MODE_LATCH~0 , apu|MOD_LFO|MODE_LATCH~0, russian_core, 1
instance = comp, \apu|MOD_LFO|MODE_LATCH , apu|MOD_LFO|MODE_LATCH, russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~2 , apu|MOD_LFO|NTSC_PLA~2, russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~0 , apu|MOD_LFO|NTSC_PLA~0, russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~3 , apu|MOD_LFO|NTSC_PLA~3, russian_core, 1
instance = comp, \apu|MOD_LFO|nLFO1~0 , apu|MOD_LFO|nLFO1~0, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1~12 , apu|MOD_LFO|LFSR1~12, russian_core, 1
instance = comp, \apu|MOD_LFO|LFSR1[14] , apu|MOD_LFO|LFSR1[14], russian_core, 1
instance = comp, \apu|MOD_LFO|SOUT[14] , apu|MOD_LFO|SOUT[14], russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~5 , apu|MOD_LFO|NTSC_PLA~5, russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~6 , apu|MOD_LFO|NTSC_PLA~6, russian_core, 1
instance = comp, \apu|MOD_LFO|NTSC_PLA~7 , apu|MOD_LFO|NTSC_PLA~7, russian_core, 1
instance = comp, \apu|MOD_LFO|nLFO2~0 , apu|MOD_LFO|nLFO2~0, russian_core, 1
instance = comp, \apu|MOD_LFO|nLFO2~1 , apu|MOD_LFO|nLFO2~1, russian_core, 1
instance = comp, \apu|ADDR_BUS[2]~7 , apu|ADDR_BUS[2]~7, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|ADR[2] , PPU|MOD_REGISTER_SELECT|ADR[2], russian_core, 1
instance = comp, \dmx|Mux6~0 , dmx|Mux6~0, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|nDBER , PPU|MOD_REGISTER_SELECT|nDBER, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|RnWR , PPU|MOD_REGISTER_SELECT|RnWR, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R_EN~0 , PPU|MOD_REGISTER_SELECT|R_EN~0, russian_core, 1
instance = comp, \apu|ADDR_BUS[1]~8 , apu|ADDR_BUS[1]~8, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|ADR[1] , PPU|MOD_REGISTER_SELECT|ADR[1], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[13]~16 , apu|MOD_SPRITE_DMA|ADR[13]~16, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[0]~feeder , apu|MOD_MOS6502_WBCD|ABL_LATCH[0]~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[0] , apu|MOD_MOS6502_WBCD|ABL_LATCH[0], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[0]~17 , apu|MOD_SPRITE_DMA|ADR[0]~17, russian_core, 1
instance = comp, \apu|ADDR_BUS[0]~6 , apu|ADDR_BUS[0]~6, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|ADR[0] , PPU|MOD_REGISTER_SELECT|ADR[0], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R2~0 , PPU|MOD_REGISTER_SELECT|R2~0, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R2 , PPU|MOD_REGISTER_SELECT|R2, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|always0~0 , PPU|MOD_REGISTER_SELECT|always0~0, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[3] , PPU|MOD_REGISTER_SELECT|DBIN[3], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|RnWR~DUPLICATE , PPU|MOD_REGISTER_SELECT|RnWR~DUPLICATE, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R4~0 , PPU|MOD_REGISTER_SELECT|R4~0, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R4 , PPU|MOD_REGISTER_SELECT|R4, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R7~0 , PPU|MOD_REGISTER_SELECT|R7~0, russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|R7 , PPU|MOD_REGISTER_SELECT|R7, russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[3]~3 , PPU|MOD_READBUSMUX|DB[3]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[3] , apu|MOD_MOS6502_WBCD|DOR_LATCH[3], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[3] , apu|MOD_SPRITE_DMA|SPRBUF[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOUT~0 , apu|MOD_MOS6502_WBCD|DOUT~0, russian_core, 1
instance = comp, \wram|temp_data[3]~24 , wram|temp_data[3]~24, russian_core, 1
instance = comp, \wram|temp_data[0]~18 , wram|temp_data[0]~18, russian_core, 1
instance = comp, \wram|temp_data[3]~37 , wram|temp_data[3]~37, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[4] , apu|MOD_MOS6502_WBCD|DOR_LATCH[4], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[4] , PPU|MOD_REGISTER_SELECT|DBIN[4], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[4]~4 , PPU|MOD_READBUSMUX|DB[4]~4, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[4] , apu|MOD_SPRITE_DMA|SPRBUF[4], russian_core, 1
instance = comp, \wram|temp_data[4]~26 , wram|temp_data[4]~26, russian_core, 1
instance = comp, \wram|temp_data[4]~38 , wram|temp_data[4]~38, russian_core, 1
instance = comp, \apu|MOD_LENGTH_TABLE|altsyncram_component|auto_generated|ram_block1a0 , apu|MOD_LENGTH_TABLE|altsyncram_component|auto_generated|ram_block1a0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[4]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[4]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[3]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[3]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[0]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[0]~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[5] , apu|MOD_MOS6502_WBCD|DOR_LATCH[5], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[5] , PPU|MOD_REGISTER_SELECT|DBIN[5], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[5]~5 , PPU|MOD_READBUSMUX|DB[5]~5, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[5] , apu|MOD_SPRITE_DMA|SPRBUF[5], russian_core, 1
instance = comp, \wram|temp_data[5]~28 , wram|temp_data[5]~28, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4000~0 , apu|MOD_REG_SEL|W4000~0, russian_core, 1
instance = comp, \apu|MOD_SQUARE_CHANNEL_A|MOD_ENVELOPE_GEN|CH_LC~0 , apu|MOD_SQUARE_CHANNEL_A|MOD_ENVELOPE_GEN|CH_LC~0, russian_core, 1
instance = comp, \apu|MOD_SQUARE_CHANNEL_A|MOD_ENVELOPE_GEN|CH_LC , apu|MOD_SQUARE_CHANNEL_A|MOD_ENVELOPE_GEN|CH_LC, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~0 , apu|LENGTH_COUNTER_SQA|LCNT2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[0] , apu|LENGTH_COUNTER_SQA|LCNT2[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|STEP_LATCH~0 , apu|LENGTH_COUNTER_SQA|STEP_LATCH~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|STEP_LATCH~DUPLICATE , apu|LENGTH_COUNTER_SQA|STEP_LATCH~DUPLICATE, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|always0~0 , apu|LENGTH_COUNTER_SQA|always0~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[0] , apu|LENGTH_COUNTER_SQA|LCNT1[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[2]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[2]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[1]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[1]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~1 , apu|LENGTH_COUNTER_SQA|LCNT2~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[1] , apu|LENGTH_COUNTER_SQA|LCNT2[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[1] , apu|LENGTH_COUNTER_SQA|LCNT1[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~2 , apu|LENGTH_COUNTER_SQA|LCNT2~2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[2] , apu|LENGTH_COUNTER_SQA|LCNT2[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[2] , apu|LENGTH_COUNTER_SQA|LCNT1[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~3 , apu|LENGTH_COUNTER_SQA|LCNT2~3, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[3] , apu|LENGTH_COUNTER_SQA|LCNT2[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[3] , apu|LENGTH_COUNTER_SQA|LCNT1[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCCout[3] , apu|LENGTH_COUNTER_SQA|LCCout[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~4 , apu|LENGTH_COUNTER_SQA|LCNT2~4, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[4] , apu|LENGTH_COUNTER_SQA|LCNT2[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[4] , apu|LENGTH_COUNTER_SQA|LCNT1[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[7]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[7]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[5]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[5]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~5 , apu|LENGTH_COUNTER_SQA|LCNT2~5, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[5] , apu|LENGTH_COUNTER_SQA|LCNT2[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[5] , apu|LENGTH_COUNTER_SQA|LCNT1[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[6]~feeder , apu|LENGTH_COUNTER_SQA|LCNT1[6]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~6 , apu|LENGTH_COUNTER_SQA|LCNT2~6, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[6] , apu|LENGTH_COUNTER_SQA|LCNT2[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[6] , apu|LENGTH_COUNTER_SQA|LCNT1[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2~7 , apu|LENGTH_COUNTER_SQA|LCNT2~7, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT2[7] , apu|LENGTH_COUNTER_SQA|LCNT2[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCNT1[7] , apu|LENGTH_COUNTER_SQA|LCNT1[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|LCCout[7] , apu|LENGTH_COUNTER_SQA|LCCout[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|CARRY_LATCH , apu|LENGTH_COUNTER_SQA|CARRY_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[0] , apu|MOD_MOS6502_WBCD|DOR_LATCH[0], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[0] , PPU|MOD_REGISTER_SELECT|DBIN[0], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[0]~0 , PPU|MOD_READBUSMUX|DB[0]~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[0] , apu|MOD_SPRITE_DMA|SPRBUF[0], russian_core, 1
instance = comp, \wram|temp_data[0]~16 , wram|temp_data[0]~16, russian_core, 1
instance = comp, \wram|temp_data[0]~34 , wram|temp_data[0]~34, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_REG1~feeder , apu|LENGTH_COUNTER_SQA|ENABLE_REG1~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[1] , apu|MOD_MOS6502_WBCD|ABL_LATCH[1], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[1]~25 , apu|MOD_SPRITE_DMA|ADR[1]~25, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[13]~21 , apu|MOD_SPRITE_DMA|ADR[13]~21, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4015~1 , apu|MOD_REG_SEL|W4015~1, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[2]~24 , apu|MOD_SPRITE_DMA|ADR[2]~24, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[2]~22 , apu|MOD_SPRITE_DMA|ADR[2]~22, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[4]~23 , apu|MOD_SPRITE_DMA|ADR[4]~23, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4017~0 , apu|MOD_REG_SEL|W4017~0, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4012~2 , apu|MOD_REG_SEL|W4012~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_EN~0 , apu|MOD_DPCM_CHANNEL|DMC_EN~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_REG1 , apu|LENGTH_COUNTER_SQA|ENABLE_REG1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_REG2~0 , apu|LENGTH_COUNTER_SQA|ENABLE_REG2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_REG2 , apu|LENGTH_COUNTER_SQA|ENABLE_REG2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|STEP_LATCH , apu|LENGTH_COUNTER_SQA|STEP_LATCH, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_FF~0 , apu|LENGTH_COUNTER_SQA|ENABLE_FF~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_FF~1 , apu|LENGTH_COUNTER_SQA|ENABLE_FF~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_FF~feeder , apu|LENGTH_COUNTER_SQA|ENABLE_FF~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQA|ENABLE_FF , apu|LENGTH_COUNTER_SQA|ENABLE_FF, russian_core, 1
instance = comp, \apu|DBIN[0]~0 , apu|DBIN[0]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[0] , apu|MOD_MOS6502_WBCD|DL_LATCH[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[0] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[0]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[0]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~5 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|ARC_CR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~22 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~22, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DBZ_ZR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DBZ_ZR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DBZ_ZR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DBZ_ZR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DBZ_ZR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DBZ_ZR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_NR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_NR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|N_LATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|N_LATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nN_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nN_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nN_OUT , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nN_OUT, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~11 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~11, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|DB_VR2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~25 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~25, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|Z_V , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|Z_V, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AVR~0 , apu|MOD_MOS6502_WBCD|MOD_ALU|AVR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AVR , apu|MOD_MOS6502_WBCD|MOD_ALU|AVR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|AVR_LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|AVR_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nV_OUT , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nV_OUT, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|V_LATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|V_LATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nV_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nV_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nV_OUT~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nV_OUT~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|FLAG_MUX~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|FLAG_MUX~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS1LATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS1LATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS1LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDS1LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|ENDX~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH2~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH2~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH2~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH2~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRESXLATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nTRESX~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nTRESX~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nTRESX~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nTRESX~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRES2LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|TRES2LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PC_DB~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PC_DB~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_DBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_DBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_DBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCH_DBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|PCL_DBR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[4]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[4]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[4]~12 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[4]~12, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[4]~13 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[4]~13, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[4]~14 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[4]~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[4]~12 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[4]~12, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[4] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[4]~DUPLICATE , apu|MOD_MOS6502_WBCD|S_REG[4]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[4]~8 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[4]~8, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[4]~9 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[4]~9, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[4] , apu|MOD_MOS6502_WBCD|ABL_LATCH[4], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[4]~4 , apu|MOD_SPRITE_DMA|ADR[4]~4, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4007~0 , apu|MOD_REG_SEL|W4007~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[7]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[7]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[4]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[4]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[0]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[0]~feeder, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4004~0 , apu|MOD_REG_SEL|W4004~0, russian_core, 1
instance = comp, \apu|MOD_SQUARE_CHANNEL_B|MOD_ENVELOPE_GEN|CH_LC~0 , apu|MOD_SQUARE_CHANNEL_B|MOD_ENVELOPE_GEN|CH_LC~0, russian_core, 1
instance = comp, \apu|MOD_SQUARE_CHANNEL_B|MOD_ENVELOPE_GEN|CH_LC , apu|MOD_SQUARE_CHANNEL_B|MOD_ENVELOPE_GEN|CH_LC, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~0 , apu|LENGTH_COUNTER_SQB|LCNT2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[0] , apu|LENGTH_COUNTER_SQB|LCNT2[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|STEP_LATCH~0 , apu|LENGTH_COUNTER_SQB|STEP_LATCH~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|STEP_LATCH , apu|LENGTH_COUNTER_SQB|STEP_LATCH, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|always0~0 , apu|LENGTH_COUNTER_SQB|always0~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[0] , apu|LENGTH_COUNTER_SQB|LCNT1[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[3]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[3]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[2]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[2]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[1]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[1]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~1 , apu|LENGTH_COUNTER_SQB|LCNT2~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[1] , apu|LENGTH_COUNTER_SQB|LCNT2[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[1] , apu|LENGTH_COUNTER_SQB|LCNT1[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~2 , apu|LENGTH_COUNTER_SQB|LCNT2~2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[2] , apu|LENGTH_COUNTER_SQB|LCNT2[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[2] , apu|LENGTH_COUNTER_SQB|LCNT1[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~3 , apu|LENGTH_COUNTER_SQB|LCNT2~3, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[3] , apu|LENGTH_COUNTER_SQB|LCNT2[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[3] , apu|LENGTH_COUNTER_SQB|LCNT1[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCCout[3] , apu|LENGTH_COUNTER_SQB|LCCout[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~4 , apu|LENGTH_COUNTER_SQB|LCNT2~4, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[4] , apu|LENGTH_COUNTER_SQB|LCNT2[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[4] , apu|LENGTH_COUNTER_SQB|LCNT1[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[6]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[6]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[5]~feeder , apu|LENGTH_COUNTER_SQB|LCNT1[5]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~5 , apu|LENGTH_COUNTER_SQB|LCNT2~5, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[5] , apu|LENGTH_COUNTER_SQB|LCNT2[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[5] , apu|LENGTH_COUNTER_SQB|LCNT1[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~6 , apu|LENGTH_COUNTER_SQB|LCNT2~6, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[6] , apu|LENGTH_COUNTER_SQB|LCNT2[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[6] , apu|LENGTH_COUNTER_SQB|LCNT1[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2~7 , apu|LENGTH_COUNTER_SQB|LCNT2~7, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT2[7] , apu|LENGTH_COUNTER_SQB|LCNT2[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCNT1[7] , apu|LENGTH_COUNTER_SQB|LCNT1[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|LCCout[7] , apu|LENGTH_COUNTER_SQB|LCCout[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|CARRY_LATCH , apu|LENGTH_COUNTER_SQB|CARRY_LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[1] , apu|MOD_MOS6502_WBCD|DOR_LATCH[1], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[1] , PPU|MOD_REGISTER_SELECT|DBIN[1], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[1]~1 , PPU|MOD_READBUSMUX|DB[1]~1, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[1] , apu|MOD_SPRITE_DMA|SPRBUF[1], russian_core, 1
instance = comp, \wram|temp_data[1]~20 , wram|temp_data[1]~20, russian_core, 1
instance = comp, \wram|temp_data[1]~35 , wram|temp_data[1]~35, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_REG1~feeder , apu|LENGTH_COUNTER_SQB|ENABLE_REG1~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_REG1 , apu|LENGTH_COUNTER_SQB|ENABLE_REG1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_REG2~0 , apu|LENGTH_COUNTER_SQB|ENABLE_REG2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_REG2 , apu|LENGTH_COUNTER_SQB|ENABLE_REG2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_FF~0 , apu|LENGTH_COUNTER_SQB|ENABLE_FF~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_FF~1 , apu|LENGTH_COUNTER_SQB|ENABLE_FF~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_SQB|ENABLE_FF , apu|LENGTH_COUNTER_SQB|ENABLE_FF, russian_core, 1
instance = comp, \apu|DBIN[1]~1 , apu|DBIN[1]~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[1] , apu|MOD_MOS6502_WBCD|DL_LATCH[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[1] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[1]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[1]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|nSBXY~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_XR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_XR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_XR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_XR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_X~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|SB_X~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|X_REG[3] , apu|MOD_MOS6502_WBCD|X_REG[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_ADHR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_ADHR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[3]~3 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[3]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[3]~11 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[3]~11, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG_LATCH1[3] , apu|MOD_MOS6502_WBCD|S_REG_LATCH1[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|S_REG[3] , apu|MOD_MOS6502_WBCD|S_REG[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[3]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[3]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[3]~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[3]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[3]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL[3]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[3]~feeder , apu|MOD_MOS6502_WBCD|ABL_LATCH[3]~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[3] , apu|MOD_MOS6502_WBCD|ABL_LATCH[3], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[3]~3 , apu|MOD_SPRITE_DMA|ADR[3]~3, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4017~1 , apu|MOD_REG_SEL|W4017~1, russian_core, 1
instance = comp, \apu|MOD_LFO|MODE5 , apu|MOD_LFO|MODE5, russian_core, 1
instance = comp, \apu|MOD_LFO|INT_FLAG_FF~0 , apu|MOD_LFO|INT_FLAG_FF~0, russian_core, 1
instance = comp, \apu|MOD_LFO|IRQDIS , apu|MOD_LFO|IRQDIS, russian_core, 1
instance = comp, \apu|MOD_LFO|INT_FLAG_FF~1 , apu|MOD_LFO|INT_FLAG_FF~1, russian_core, 1
instance = comp, \apu|MOD_LFO|INT_FLAG_FF , apu|MOD_LFO|INT_FLAG_FF, russian_core, 1
instance = comp, \apu|MOD_LFO|INT_LATCH , apu|MOD_LFO|INT_LATCH, russian_core, 1
instance = comp, \apu|DBIN[6]~5 , apu|DBIN[6]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[6] , apu|MOD_MOS6502_WBCD|DL_LATCH[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[6] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[6]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[6]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~3 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nADL_PCL~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nADL_PCL~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADL_PCLR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADL_PCLR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADL_PCLR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADL_PCLR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~6 , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[6]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[6]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[7]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[7]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[5]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCLS[5]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH_IN~2 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH_IN~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~0 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[0]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[0]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~0 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[0] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH_03~0 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH_03~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~4 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[4] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~4 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[4] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~5 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[5]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[5]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|DL_ADHR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[5]~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADHT[5]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[5]~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[5]~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[5] , apu|MOD_MOS6502_WBCD|ABH_LATCH[5], russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4012~0 , apu|MOD_REG_SEL|W4012~0, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4010~0 , apu|MOD_REG_SEL|W4010~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|ENIRQ , apu|MOD_DPCM_CHANNEL|ENIRQ, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_INT_FF~1 , apu|MOD_DPCM_CHANNEL|DMC_INT_FF~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_INT_FF , apu|MOD_DPCM_CHANNEL|DMC_INT_FF, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[7] , apu|MOD_MOS6502_WBCD|DOR_LATCH[7], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[7] , PPU|MOD_REGISTER_SELECT|DBIN[7], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[7]~7 , PPU|MOD_READBUSMUX|DB[7]~7, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[7] , apu|MOD_SPRITE_DMA|SPRBUF[7], russian_core, 1
instance = comp, \wram|temp_data[7]~32 , wram|temp_data[7]~32, russian_core, 1
instance = comp, \apu|DBIN[7]~6 , apu|DBIN[7]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[7] , apu|MOD_MOS6502_WBCD|DL_LATCH[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[7] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[7]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[7]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~23 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~23, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|IR5_I , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|IR5_I, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|I_LATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|I_LATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|I_LATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|I_LATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|I_LATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|I_LATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nI_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_FLAGS|nI_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH2~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH2~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH2~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BLATCH2~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|B_OUT~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|B_OUT~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|Z_IR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|Z_IR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[4] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[4]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[4]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|PGX~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|PGX~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SBA~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SBA~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SBA~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SBA~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_ADHR~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_ADHR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[7]~7 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADH[7]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[7]~DUPLICATE , apu|MOD_MOS6502_WBCD|ABH_LATCH[7]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[15]~15 , apu|MOD_SPRITE_DMA|ADR[15]~15, russian_core, 1
instance = comp, \wram|always0~1 , wram|always0~1, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W400F~0 , apu|MOD_REG_SEL|W400F~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_REG1~feeder , apu|LENGTH_COUNTER_RND|ENABLE_REG1~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_REG1 , apu|LENGTH_COUNTER_RND|ENABLE_REG1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_REG2~0 , apu|LENGTH_COUNTER_RND|ENABLE_REG2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_REG2 , apu|LENGTH_COUNTER_RND|ENABLE_REG2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|STEP_LATCH~0 , apu|LENGTH_COUNTER_RND|STEP_LATCH~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|STEP_LATCH , apu|LENGTH_COUNTER_RND|STEP_LATCH, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[6]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[6]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[4]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[4]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[2]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[2]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[0]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[0]~feeder, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W400C~0 , apu|MOD_REG_SEL|W400C~0, russian_core, 1
instance = comp, \apu|MOD_NOISE_CHANNEL|MOD_ENVELOPE_GEN|CH_LC~0 , apu|MOD_NOISE_CHANNEL|MOD_ENVELOPE_GEN|CH_LC~0, russian_core, 1
instance = comp, \apu|MOD_NOISE_CHANNEL|MOD_ENVELOPE_GEN|CH_LC , apu|MOD_NOISE_CHANNEL|MOD_ENVELOPE_GEN|CH_LC, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~0 , apu|LENGTH_COUNTER_RND|LCNT2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[0] , apu|LENGTH_COUNTER_RND|LCNT2[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|always0~0 , apu|LENGTH_COUNTER_RND|always0~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[0] , apu|LENGTH_COUNTER_RND|LCNT1[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[1]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[1]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~1 , apu|LENGTH_COUNTER_RND|LCNT2~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[1] , apu|LENGTH_COUNTER_RND|LCNT2[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[1] , apu|LENGTH_COUNTER_RND|LCNT1[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~2 , apu|LENGTH_COUNTER_RND|LCNT2~2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[2] , apu|LENGTH_COUNTER_RND|LCNT2[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[2] , apu|LENGTH_COUNTER_RND|LCNT1[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[3]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[3]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~3 , apu|LENGTH_COUNTER_RND|LCNT2~3, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[3] , apu|LENGTH_COUNTER_RND|LCNT2[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[3] , apu|LENGTH_COUNTER_RND|LCNT1[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCCout[3] , apu|LENGTH_COUNTER_RND|LCCout[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~4 , apu|LENGTH_COUNTER_RND|LCNT2~4, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[4] , apu|LENGTH_COUNTER_RND|LCNT2[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[4] , apu|LENGTH_COUNTER_RND|LCNT1[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[5]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[5]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~5 , apu|LENGTH_COUNTER_RND|LCNT2~5, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[5] , apu|LENGTH_COUNTER_RND|LCNT2[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[5] , apu|LENGTH_COUNTER_RND|LCNT1[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~6 , apu|LENGTH_COUNTER_RND|LCNT2~6, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[6] , apu|LENGTH_COUNTER_RND|LCNT2[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[6] , apu|LENGTH_COUNTER_RND|LCNT1[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[7]~feeder , apu|LENGTH_COUNTER_RND|LCNT1[7]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2~7 , apu|LENGTH_COUNTER_RND|LCNT2~7, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT2[7] , apu|LENGTH_COUNTER_RND|LCNT2[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCNT1[7] , apu|LENGTH_COUNTER_RND|LCNT1[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|LCCout[7] , apu|LENGTH_COUNTER_RND|LCCout[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|CARRY_LATCH , apu|LENGTH_COUNTER_RND|CARRY_LATCH, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_FF~0 , apu|LENGTH_COUNTER_RND|ENABLE_FF~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_FF~1 , apu|LENGTH_COUNTER_RND|ENABLE_FF~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_RND|ENABLE_FF , apu|LENGTH_COUNTER_RND|ENABLE_FF, russian_core, 1
instance = comp, \apu|DBIN[3]~3 , apu|DBIN[3]~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[3] , apu|MOD_MOS6502_WBCD|DL_LATCH[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[3]~0 , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[3]~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[3] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_DECODER|X~5 , apu|MOD_MOS6502_WBCD|MOD_DECODER|X~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nPCH_PCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|nPCH_PCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADH_PCHR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_PC_SETUP|ADH_PCHR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~3 , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[3] , apu|MOD_MOS6502_WBCD|MOD_PC|PCHS[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH~6 , apu|MOD_MOS6502_WBCD|MOD_PC|PCH~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PC|PCH[6] , apu|MOD_MOS6502_WBCD|MOD_PC|PCH[6], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[6]~18 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[6]~18, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[6]~17 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[6]~17, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[6]~19 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DBT[6]~19, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[6]~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[6]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[6]~14 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|SB[6]~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|AI[6]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|AI[6]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[7] , apu|MOD_MOS6502_WBCD|MOD_ALU|COUT[7], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|LATCH_C7 , apu|MOD_MOS6502_WBCD|MOD_ALU|LATCH_C7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH2~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH2~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|BRLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|i2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|i2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T1LATCH~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|FETCHLATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|FETCHLATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|FETCHLATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|FETCHLATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[0]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[0]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[0] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT2 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[0] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[0], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~2 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[1] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT3 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[1] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[1], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~3 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[2] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT4 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[2] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[3] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH2[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~1 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[3] , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|LATCH1[3], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT5 , apu|MOD_MOS6502_WBCD|MOD_EXTRA_COUNTER|nT5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK5LATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK5LATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK5LATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK5LATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH1~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH1~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH2~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH2~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|BRK6LATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2~feeder , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2~feeder, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_INT_RESET_CONTROL|RESLATCH2~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|WRLATCH, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY2~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY2~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|nREADY2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_STOP_LATCH , apu|MOD_DPCM_CHANNEL|DMC_STOP_LATCH, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT1[0]~2 , apu|MOD_DPCM_CHANNEL|DMCSBCNT1[0]~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT1[0] , apu|MOD_DPCM_CHANNEL|DMCSBCNT1[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|FS[0] , apu|MOD_DPCM_CHANNEL|FS[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|FS[1] , apu|MOD_DPCM_CHANNEL|FS[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|FS[2] , apu|MOD_DPCM_CHANNEL|FS[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|FS[3] , apu|MOD_DPCM_CHANNEL|FS[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|MOD_DPCM_TABLE|altsyncram_component|auto_generated|ram_block1a0 , apu|MOD_DPCM_CHANNEL|MOD_DPCM_TABLE|altsyncram_component|auto_generated|ram_block1a0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~5 , apu|MOD_DPCM_CHANNEL|DLFSR1~5, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[7] , apu|MOD_DPCM_CHANNEL|DLFSR1[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[7] , apu|MOD_DPCM_CHANNEL|DLFSROUT[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~8 , apu|MOD_DPCM_CHANNEL|DLFSR1~8, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[8] , apu|MOD_DPCM_CHANNEL|DLFSR1[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[8]~feeder , apu|MOD_DPCM_CHANNEL|DLFSROUT[8]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[8] , apu|MOD_DPCM_CHANNEL|DLFSROUT[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~1 , apu|MOD_DPCM_CHANNEL|DLFSR1~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~4 , apu|MOD_DPCM_CHANNEL|DLFSR1~4, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[6] , apu|MOD_DPCM_CHANNEL|DLFSR1[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[6] , apu|MOD_DPCM_CHANNEL|DLFSROUT[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~6 , apu|MOD_DPCM_CHANNEL|DLFSR1~6, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~13 , apu|MOD_DPCM_CHANNEL|DLFSR1~13, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[1] , apu|MOD_DPCM_CHANNEL|DLFSR1[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[1]~feeder , apu|MOD_DPCM_CHANNEL|DLFSROUT[1]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[1] , apu|MOD_DPCM_CHANNEL|DLFSROUT[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~14 , apu|MOD_DPCM_CHANNEL|DLFSR1~14, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[2] , apu|MOD_DPCM_CHANNEL|DLFSR1[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[2] , apu|MOD_DPCM_CHANNEL|DLFSROUT[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~2 , apu|MOD_DPCM_CHANNEL|DLFSR1~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~3 , apu|MOD_DPCM_CHANNEL|DLFSR1~3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[5] , apu|MOD_DPCM_CHANNEL|DLFSR1[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[5] , apu|MOD_DPCM_CHANNEL|DLFSROUT[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~0 , apu|MOD_DPCM_CHANNEL|DLFSR1~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~11 , apu|MOD_DPCM_CHANNEL|DLFSR1~11, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~10 , apu|MOD_DPCM_CHANNEL|DLFSR1~10, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~12 , apu|MOD_DPCM_CHANNEL|DLFSR1~12, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[0] , apu|MOD_DPCM_CHANNEL|DLFSR1[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[0]~feeder , apu|MOD_DPCM_CHANNEL|DLFSROUT[0]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[0] , apu|MOD_DPCM_CHANNEL|DLFSROUT[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~9 , apu|MOD_DPCM_CHANNEL|DLFSR1~9, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[3] , apu|MOD_DPCM_CHANNEL|DLFSR1[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[3] , apu|MOD_DPCM_CHANNEL|DLFSROUT[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~7 , apu|MOD_DPCM_CHANNEL|DLFSR1~7, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1[4] , apu|MOD_DPCM_CHANNEL|DLFSR1[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSROUT[4] , apu|MOD_DPCM_CHANNEL|DLFSROUT[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DLFSR1~15 , apu|MOD_DPCM_CHANNEL|DLFSR1~15, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT[0] , apu|MOD_DPCM_CHANNEL|DMCSBCNT[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT1~0 , apu|MOD_DPCM_CHANNEL|DMCSBCNT1~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT1[1] , apu|MOD_DPCM_CHANNEL|DMCSBCNT1[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT[1] , apu|MOD_DPCM_CHANNEL|DMCSBCNT[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT1~1 , apu|MOD_DPCM_CHANNEL|DMCSBCNT1~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT1[2] , apu|MOD_DPCM_CHANNEL|DMCSBCNT1[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCNT[2] , apu|MOD_DPCM_CHANNEL|DMCSBCNT[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSBCout[2] , apu|MOD_DPCM_CHANNEL|DMCSBCout[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|NOUT_LATCH , apu|MOD_DPCM_CHANNEL|NOUT_LATCH, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_STOP_FF~0 , apu|MOD_DPCM_CHANNEL|DMC_STOP_FF~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_STOP_FF~1 , apu|MOD_DPCM_CHANNEL|DMC_STOP_FF~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_STOP_FF~2 , apu|MOD_DPCM_CHANNEL|DMC_STOP_FF~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_STOP_FF , apu|MOD_DPCM_CHANNEL|DMC_STOP_FF, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_START_FF~0 , apu|MOD_DPCM_CHANNEL|DMC_START_FF~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_START_FF , apu|MOD_DPCM_CHANNEL|DMC_START_FF, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|RUN_LATCH , apu|MOD_DPCM_CHANNEL|RUN_LATCH, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|nDMC_AB~0 , apu|MOD_DPCM_CHANNEL|nDMC_AB~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|nDMC_AB , apu|MOD_DPCM_CHANNEL|nDMC_AB, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[1]~1 , apu|MOD_SPRITE_DMA|ADR[1]~1, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4015~0 , apu|MOD_REG_SEL|W4015~0, russian_core, 1
instance = comp, \apu|DBIN[4]~4 , apu|DBIN[4]~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[4] , apu|MOD_MOS6502_WBCD|DL_LATCH[4], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|nTWOCYCLE~0 , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|nTWOCYCLE~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|nTWOCYCLE~1 , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|nTWOCYCLE~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|COMPLATCH2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|COMPLATCH2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_DISPATCH|T0~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|AND , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_ALU_SETUP|AND, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~2 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~3 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR~3, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_BUS_CONTROL|SB_DBR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[6]~6 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|DB[6]~6, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[6] , apu|MOD_MOS6502_WBCD|DOR_LATCH[6], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[6] , PPU|MOD_REGISTER_SELECT|DBIN[6], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[6]~6 , PPU|MOD_READBUSMUX|DB[6]~6, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[6] , apu|MOD_SPRITE_DMA|SPRBUF[6], russian_core, 1
instance = comp, \wram|temp_data[6]~30 , wram|temp_data[6]~30, russian_core, 1
instance = comp, \wram|temp_data[6]~40 , wram|temp_data[6]~40, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4013~0 , apu|MOD_REG_SEL|W4013~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[6] , apu|MOD_DPCM_CHANNEL|DMC_LEN[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[10]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[10]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[2] , apu|MOD_DPCM_CHANNEL|DMC_LEN[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[6]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[6]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~0 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[1] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT~1 , apu|MOD_DPCM_CHANNEL|DMCSLCNT~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[1] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~1 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[2] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT~2 , apu|MOD_DPCM_CHANNEL|DMCSLCNT~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[2] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~2 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[3]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[3]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[3] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT~3 , apu|MOD_DPCM_CHANNEL|DMCSLCNT~3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[3] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[1] , apu|MOD_DPCM_CHANNEL|DMC_LEN[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[5]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[5]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[0] , apu|MOD_DPCM_CHANNEL|DMC_LEN[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[4]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[4]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~3 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[4] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DSLOAD~1 , apu|MOD_DPCM_CHANNEL|DSLOAD~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[4] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~4 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~4, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[5] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[5] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCout[5] , apu|MOD_DPCM_CHANNEL|DMCSLCout[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~5 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~5, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[6] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[6] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[4] , apu|MOD_DPCM_CHANNEL|DMC_LEN[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[8]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[8]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[3] , apu|MOD_DPCM_CHANNEL|DMC_LEN[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[7]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[7]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~6 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~6, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[7] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[7] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~7 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~7, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[8] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[8] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[5] , apu|MOD_DPCM_CHANNEL|DMC_LEN[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[9]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[9]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~8 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~8, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[9] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[9], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[9] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[9], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~9 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~9, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[10] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[10], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[10] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[10], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_LEN[7] , apu|MOD_DPCM_CHANNEL|DMC_LEN[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[11]~feeder , apu|MOD_DPCM_CHANNEL|DMCSLCNT[11]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCout[8] , apu|MOD_DPCM_CHANNEL|DMCSLCout[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1~10 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1~10, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[11] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[11], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[11] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[11], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCout[11] , apu|MOD_DPCM_CHANNEL|DMCSLCout[11], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|SOUT_LATCH , apu|MOD_DPCM_CHANNEL|SOUT_LATCH, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|LOOP , apu|MOD_DPCM_CHANNEL|LOOP, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|ED1~0 , apu|MOD_DPCM_CHANNEL|ED1~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_EN~1 , apu|MOD_DPCM_CHANNEL|DMC_EN~1, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4015~2 , apu|MOD_REG_SEL|W4015~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_EN~2 , apu|MOD_DPCM_CHANNEL|DMC_EN~2, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_EN~3 , apu|MOD_DPCM_CHANNEL|DMC_EN~3, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_EN , apu|MOD_DPCM_CHANNEL|DMC_EN, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|EN_LATCH1 , apu|MOD_DPCM_CHANNEL|EN_LATCH1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_PCM_LATCH , apu|MOD_DPCM_CHANNEL|DMC_PCM_LATCH, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DSLOAD~0 , apu|MOD_DPCM_CHANNEL|DSLOAD~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[0]~11 , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[0]~11, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT1[0] , apu|MOD_DPCM_CHANNEL|DMCSLCNT1[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT~0 , apu|MOD_DPCM_CHANNEL|DMCSLCNT~0, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCSLCNT[0] , apu|MOD_DPCM_CHANNEL|DMCSLCNT[0], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[0]~18 , apu|MOD_SPRITE_DMA|ADR[0]~18, russian_core, 1
instance = comp, \wram|always0~0 , wram|always0~0, russian_core, 1
instance = comp, \wram|temp_data[5]~39 , wram|temp_data[5]~39, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[5] , apu|MOD_SPRITE_DMA|SPR_AD[5], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[13]~13 , apu|MOD_SPRITE_DMA|ADR[13]~13, russian_core, 1
instance = comp, \wram|temp_data[7]~41 , wram|temp_data[7]~41, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4012~1 , apu|MOD_REG_SEL|W4012~1, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[7] , apu|MOD_DPCM_CHANNEL|DMC_ADR[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[13]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[13]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[6]~feeder , apu|MOD_DPCM_CHANNEL|DMC_ADR[6]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[6] , apu|MOD_DPCM_CHANNEL|DMC_ADR[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[12]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[12]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[4]~feeder , apu|MOD_DPCM_CHANNEL|DMC_ADR[4]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[4] , apu|MOD_DPCM_CHANNEL|DMC_ADR[4], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[10]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[10]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~4 , apu|MOD_DPCM_CHANNEL|DMC_A1~4, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[5] , apu|MOD_DPCM_CHANNEL|DMC_A1[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A~4 , apu|MOD_DPCM_CHANNEL|DMC_A~4, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[5] , apu|MOD_DPCM_CHANNEL|DMC_A[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCACout[5] , apu|MOD_DPCM_CHANNEL|DMCACout[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[0] , apu|MOD_DPCM_CHANNEL|DMC_ADR[0], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[6]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[6]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~5 , apu|MOD_DPCM_CHANNEL|DMC_A1~5, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[6] , apu|MOD_DPCM_CHANNEL|DMC_A1[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[6] , apu|MOD_DPCM_CHANNEL|DMC_A[6], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[3] , apu|MOD_DPCM_CHANNEL|DMC_ADR[3], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[9]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[9]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[1] , apu|MOD_DPCM_CHANNEL|DMC_ADR[1], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[7]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[7]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~6 , apu|MOD_DPCM_CHANNEL|DMC_A1~6, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[7] , apu|MOD_DPCM_CHANNEL|DMC_A1[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[7] , apu|MOD_DPCM_CHANNEL|DMC_A[7], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[2]~feeder , apu|MOD_DPCM_CHANNEL|DMC_ADR[2]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[2] , apu|MOD_DPCM_CHANNEL|DMC_ADR[2], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[8]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[8]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~7 , apu|MOD_DPCM_CHANNEL|DMC_A1~7, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[8] , apu|MOD_DPCM_CHANNEL|DMC_A1[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[8] , apu|MOD_DPCM_CHANNEL|DMC_A[8], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~8 , apu|MOD_DPCM_CHANNEL|DMC_A1~8, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[9] , apu|MOD_DPCM_CHANNEL|DMC_A1[9], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[9] , apu|MOD_DPCM_CHANNEL|DMC_A[9], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~9 , apu|MOD_DPCM_CHANNEL|DMC_A1~9, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[10] , apu|MOD_DPCM_CHANNEL|DMC_A1[10], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[10] , apu|MOD_DPCM_CHANNEL|DMC_A[10], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[5]~feeder , apu|MOD_DPCM_CHANNEL|DMC_ADR[5]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_ADR[5] , apu|MOD_DPCM_CHANNEL|DMC_ADR[5], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[11]~feeder , apu|MOD_DPCM_CHANNEL|DMC_A[11]~feeder, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMCACout[9] , apu|MOD_DPCM_CHANNEL|DMCACout[9], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~10 , apu|MOD_DPCM_CHANNEL|DMC_A1~10, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[11] , apu|MOD_DPCM_CHANNEL|DMC_A1[11], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[11] , apu|MOD_DPCM_CHANNEL|DMC_A[11], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~11 , apu|MOD_DPCM_CHANNEL|DMC_A1~11, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[12] , apu|MOD_DPCM_CHANNEL|DMC_A1[12], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[12] , apu|MOD_DPCM_CHANNEL|DMC_A[12], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~12 , apu|MOD_DPCM_CHANNEL|DMC_A1~12, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[13] , apu|MOD_DPCM_CHANNEL|DMC_A1[13], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[13] , apu|MOD_DPCM_CHANNEL|DMC_A[13], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1~13 , apu|MOD_DPCM_CHANNEL|DMC_A1~13, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A1[14] , apu|MOD_DPCM_CHANNEL|DMC_A1[14], russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A~5 , apu|MOD_DPCM_CHANNEL|DMC_A~5, russian_core, 1
instance = comp, \apu|MOD_DPCM_CHANNEL|DMC_A[14] , apu|MOD_DPCM_CHANNEL|DMC_A[14], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[6] , apu|MOD_SPRITE_DMA|SPR_AD[6], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[14]~14 , apu|MOD_SPRITE_DMA|ADR[14]~14, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DOR_LATCH[2] , apu|MOD_MOS6502_WBCD|DOR_LATCH[2], russian_core, 1
instance = comp, \PPU|MOD_REGISTER_SELECT|DBIN[2] , PPU|MOD_REGISTER_SELECT|DBIN[2], russian_core, 1
instance = comp, \PPU|MOD_READBUSMUX|DB[2]~2 , PPU|MOD_READBUSMUX|DB[2]~2, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRBUF[2] , apu|MOD_SPRITE_DMA|SPRBUF[2], russian_core, 1
instance = comp, \wram|temp_data[2]~22 , wram|temp_data[2]~22, russian_core, 1
instance = comp, \wram|temp_data[2]~36 , wram|temp_data[2]~36, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|ENABLE_REG1 , apu|LENGTH_COUNTER_TRI|ENABLE_REG1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|ENABLE_REG2~0 , apu|LENGTH_COUNTER_TRI|ENABLE_REG2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|ENABLE_REG2 , apu|LENGTH_COUNTER_TRI|ENABLE_REG2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[4]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[4]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[2]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[2]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[0]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[0]~feeder, russian_core, 1
instance = comp, \apu|MOD_TRIANGLE_CHANNEL|TRILC~0 , apu|MOD_TRIANGLE_CHANNEL|TRILC~0, russian_core, 1
instance = comp, \apu|MOD_TRIANGLE_CHANNEL|TRILC , apu|MOD_TRIANGLE_CHANNEL|TRILC, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~0 , apu|LENGTH_COUNTER_TRI|LCNT2~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[0] , apu|LENGTH_COUNTER_TRI|LCNT2[0], russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W400B~0 , apu|MOD_REG_SEL|W400B~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|always0~0 , apu|LENGTH_COUNTER_TRI|always0~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[0] , apu|LENGTH_COUNTER_TRI|LCNT1[0], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[1]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[1]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~1 , apu|LENGTH_COUNTER_TRI|LCNT2~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[1] , apu|LENGTH_COUNTER_TRI|LCNT2[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[1] , apu|LENGTH_COUNTER_TRI|LCNT1[1], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~2 , apu|LENGTH_COUNTER_TRI|LCNT2~2, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[2] , apu|LENGTH_COUNTER_TRI|LCNT2[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[2] , apu|LENGTH_COUNTER_TRI|LCNT1[2], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[3]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[3]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~3 , apu|LENGTH_COUNTER_TRI|LCNT2~3, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[3] , apu|LENGTH_COUNTER_TRI|LCNT2[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[3] , apu|LENGTH_COUNTER_TRI|LCNT1[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCCout[3] , apu|LENGTH_COUNTER_TRI|LCCout[3], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~4 , apu|LENGTH_COUNTER_TRI|LCNT2~4, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[4] , apu|LENGTH_COUNTER_TRI|LCNT2[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[4] , apu|LENGTH_COUNTER_TRI|LCNT1[4], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[7]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[7]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[6]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[6]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[5]~feeder , apu|LENGTH_COUNTER_TRI|LCNT1[5]~feeder, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~5 , apu|LENGTH_COUNTER_TRI|LCNT2~5, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[5] , apu|LENGTH_COUNTER_TRI|LCNT2[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[5] , apu|LENGTH_COUNTER_TRI|LCNT1[5], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~6 , apu|LENGTH_COUNTER_TRI|LCNT2~6, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[6] , apu|LENGTH_COUNTER_TRI|LCNT2[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[6] , apu|LENGTH_COUNTER_TRI|LCNT1[6], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2~7 , apu|LENGTH_COUNTER_TRI|LCNT2~7, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT2[7] , apu|LENGTH_COUNTER_TRI|LCNT2[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCNT1[7] , apu|LENGTH_COUNTER_TRI|LCNT1[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|LCCout[7] , apu|LENGTH_COUNTER_TRI|LCCout[7], russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|CARRY_LATCH , apu|LENGTH_COUNTER_TRI|CARRY_LATCH, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|ENABLE_FF~0 , apu|LENGTH_COUNTER_TRI|ENABLE_FF~0, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|ENABLE_FF~1 , apu|LENGTH_COUNTER_TRI|ENABLE_FF~1, russian_core, 1
instance = comp, \apu|LENGTH_COUNTER_TRI|ENABLE_FF , apu|LENGTH_COUNTER_TRI|ENABLE_FF, russian_core, 1
instance = comp, \apu|DBIN[2]~2 , apu|DBIN[2]~2, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|DL_LATCH[2] , apu|MOD_MOS6502_WBCD|DL_LATCH[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[2] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|PD[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[2] , apu|MOD_MOS6502_WBCD|MOD_PREDECODE_IR|IR[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_ADLR~0 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_ADLR~0, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_ADLR~1 , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_ADLR~1, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_ADLR , apu|MOD_MOS6502_WBCD|MOD_RANDOM_LOGIC|MOD_REGS_CONTROL|S_ADLR, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[2]~DUPLICATE , apu|MOD_MOS6502_WBCD|MOD_ALU|ADD[2]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL~4 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL~4, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL~5 , apu|MOD_MOS6502_WBCD|MOD_BUS_MUX|ADL~5, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABL_LATCH[2] , apu|MOD_MOS6502_WBCD|ABL_LATCH[2], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[2]~2 , apu|MOD_SPRITE_DMA|ADR[2]~2, russian_core, 1
instance = comp, \apu|MOD_REG_SEL|W4014~0 , apu|MOD_REG_SEL|W4014~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|START_DMA_FF~0 , apu|MOD_SPRITE_DMA|START_DMA_FF~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|START_DMA_FF , apu|MOD_SPRITE_DMA|START_DMA_FF, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|DO_SPR~0 , apu|MOD_SPRITE_DMA|DO_SPR~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|DO_SPR , apu|MOD_SPRITE_DMA|DO_SPR, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|STOP_DMA_FF~0 , apu|MOD_SPRITE_DMA|STOP_DMA_FF~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRACout[4] , apu|MOD_SPRITE_DMA|SPRACout[4], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~4 , apu|MOD_SPRITE_DMA|SPRA1~4, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[5] , apu|MOD_SPRITE_DMA|SPRA1[5], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[5] , apu|MOD_SPRITE_DMA|SPRA[5], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~5 , apu|MOD_SPRITE_DMA|SPRA1~5, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[6] , apu|MOD_SPRITE_DMA|SPRA1[6], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[6] , apu|MOD_SPRITE_DMA|SPRA[6], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1~6 , apu|MOD_SPRITE_DMA|SPRA1~6, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA1[7] , apu|MOD_SPRITE_DMA|SPRA1[7], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[7] , apu|MOD_SPRITE_DMA|SPRA[7], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRACout[7] , apu|MOD_SPRITE_DMA|SPRACout[7], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRE , apu|MOD_SPRITE_DMA|SPRE, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|STOP_DMA_FF~1 , apu|MOD_SPRITE_DMA|STOP_DMA_FF~1, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|STOP_DMA_FF , apu|MOD_SPRITE_DMA|STOP_DMA_FF, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|NO_SPR~0 , apu|MOD_SPRITE_DMA|NO_SPR~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|NO_SPR~DUPLICATE , apu|MOD_SPRITE_DMA|NO_SPR~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|always0~1 , apu|MOD_SPRITE_DMA|always0~1, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPRA[0] , apu|MOD_SPRITE_DMA|SPRA[0], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[0]~0 , apu|MOD_SPRITE_DMA|ADR[0]~0, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[5]~5 , apu|MOD_SPRITE_DMA|ADR[5]~5, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[6]~6 , apu|MOD_SPRITE_DMA|ADR[6]~6, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[7]~7 , apu|MOD_SPRITE_DMA|ADR[7]~7, russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[0]~DUPLICATE , apu|MOD_MOS6502_WBCD|ABH_LATCH[0]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[0] , apu|MOD_SPRITE_DMA|SPR_AD[0], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[8]~8 , apu|MOD_SPRITE_DMA|ADR[8]~8, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[1] , apu|MOD_SPRITE_DMA|SPR_AD[1], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[9]~9 , apu|MOD_SPRITE_DMA|ADR[9]~9, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[2] , apu|MOD_SPRITE_DMA|SPR_AD[2], russian_core, 1
instance = comp, \apu|MOD_MOS6502_WBCD|ABH_LATCH[2]~DUPLICATE , apu|MOD_MOS6502_WBCD|ABH_LATCH[2]~DUPLICATE, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[10]~10 , apu|MOD_SPRITE_DMA|ADR[10]~10, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[3] , apu|MOD_SPRITE_DMA|SPR_AD[3], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[11]~11 , apu|MOD_SPRITE_DMA|ADR[11]~11, russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|SPR_AD[4] , apu|MOD_SPRITE_DMA|SPR_AD[4], russian_core, 1
instance = comp, \apu|MOD_SPRITE_DMA|ADR[12]~12 , apu|MOD_SPRITE_DMA|ADR[12]~12, russian_core, 1
instance = comp, \wram|temp_data[0]~17 , wram|temp_data[0]~17, russian_core, 1
instance = comp, \wram|temp_data[0]~19 , wram|temp_data[0]~19, russian_core, 1
instance = comp, \wram|temp_data[1]~21 , wram|temp_data[1]~21, russian_core, 1
instance = comp, \wram|temp_data[2]~23 , wram|temp_data[2]~23, russian_core, 1
instance = comp, \wram|temp_data[3]~25 , wram|temp_data[3]~25, russian_core, 1
instance = comp, \wram|temp_data[4]~27 , wram|temp_data[4]~27, russian_core, 1
instance = comp, \wram|temp_data[5]~29 , wram|temp_data[5]~29, russian_core, 1
instance = comp, \wram|temp_data[6]~31 , wram|temp_data[6]~31, russian_core, 1
instance = comp, \wram|temp_data[7]~33 , wram|temp_data[7]~33, russian_core, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, russian_core, 1
