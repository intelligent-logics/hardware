|uart
clk => clk.IN5
reset => reset.IN5
rx => rx.IN1
tx_data[0] => tx_data[0].IN1
tx_data[1] => tx_data[1].IN1
tx_data[2] => tx_data[2].IN1
tx_data[3] => tx_data[3].IN1
tx_data[4] => tx_data[4].IN1
tx_data[5] => tx_data[5].IN1
tx_data[6] => tx_data[6].IN1
tx_data[7] => tx_data[7].IN1
rd_en => rd_en.IN1
wr_en => wr_en.IN1
tx <= uart_tx:uart_tx_blk.tx
rx_data[0] <= fifo:uart_rx_fifo.rd_data
rx_data[1] <= fifo:uart_rx_fifo.rd_data
rx_data[2] <= fifo:uart_rx_fifo.rd_data
rx_data[3] <= fifo:uart_rx_fifo.rd_data
rx_data[4] <= fifo:uart_rx_fifo.rd_data
rx_data[5] <= fifo:uart_rx_fifo.rd_data
rx_data[6] <= fifo:uart_rx_fifo.rd_data
rx_data[7] <= fifo:uart_rx_fifo.rd_data
rx_empty <= fifo:uart_rx_fifo.empty
tx_full <= fifo:uart_tx_fifo.full
parity_err <= q_rx_parity_err.DB_MAX_OUTPUT_PORT_TYPE


|uart|uart_baud_clk:uart_baud_clk_blk
clk => q_cnt[0].CLK
clk => q_cnt[1].CLK
clk => q_cnt[2].CLK
clk => q_cnt[3].CLK
clk => q_cnt[4].CLK
clk => q_cnt[5].CLK
clk => q_cnt[6].CLK
clk => q_cnt[7].CLK
clk => q_cnt[8].CLK
clk => q_cnt[9].CLK
clk => q_cnt[10].CLK
clk => q_cnt[11].CLK
clk => q_cnt[12].CLK
clk => q_cnt[13].CLK
clk => q_cnt[14].CLK
clk => q_cnt[15].CLK
reset => q_cnt[0].ACLR
reset => q_cnt[1].ACLR
reset => q_cnt[2].ACLR
reset => q_cnt[3].ACLR
reset => q_cnt[4].ACLR
reset => q_cnt[5].ACLR
reset => q_cnt[6].ACLR
reset => q_cnt[7].ACLR
reset => q_cnt[8].ACLR
reset => q_cnt[9].ACLR
reset => q_cnt[10].ACLR
reset => q_cnt[11].ACLR
reset => q_cnt[12].ACLR
reset => q_cnt[13].ACLR
reset => q_cnt[14].ACLR
reset => q_cnt[15].ACLR
baud_clk_tick <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|uart|uart_rx:uart_rx_blk
clk => q_rx.CLK
clk => q_parity_err.CLK
clk => q_done_tick.CLK
clk => q_data_bit_idx[0].CLK
clk => q_data_bit_idx[1].CLK
clk => q_data_bit_idx[2].CLK
clk => q_data[0].CLK
clk => q_data[1].CLK
clk => q_data[2].CLK
clk => q_data[3].CLK
clk => q_data[4].CLK
clk => q_data[5].CLK
clk => q_data[6].CLK
clk => q_data[7].CLK
clk => q_oversample_tick_cnt[0].CLK
clk => q_oversample_tick_cnt[1].CLK
clk => q_oversample_tick_cnt[2].CLK
clk => q_oversample_tick_cnt[3].CLK
clk => q_state~1.DATAIN
reset => q_rx.PRESET
reset => q_parity_err.ACLR
reset => q_done_tick.ACLR
reset => q_data_bit_idx[0].ACLR
reset => q_data_bit_idx[1].ACLR
reset => q_data_bit_idx[2].ACLR
reset => q_data[0].ACLR
reset => q_data[1].ACLR
reset => q_data[2].ACLR
reset => q_data[3].ACLR
reset => q_data[4].ACLR
reset => q_data[5].ACLR
reset => q_data[6].ACLR
reset => q_data[7].ACLR
reset => q_oversample_tick_cnt[0].ACLR
reset => q_oversample_tick_cnt[1].ACLR
reset => q_oversample_tick_cnt[2].ACLR
reset => q_oversample_tick_cnt[3].ACLR
reset => q_state~3.DATAIN
baud_clk_tick => d_oversample_tick_cnt.OUTPUTSELECT
baud_clk_tick => d_oversample_tick_cnt.OUTPUTSELECT
baud_clk_tick => d_oversample_tick_cnt.OUTPUTSELECT
baud_clk_tick => d_oversample_tick_cnt.OUTPUTSELECT
baud_clk_tick => always1.IN1
baud_clk_tick => always1.IN1
rx => q_rx.DATAIN
rx_data[0] <= q_data[0].DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= q_data[1].DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= q_data[2].DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= q_data[3].DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= q_data[4].DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= q_data[5].DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= q_data[6].DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= q_data[7].DB_MAX_OUTPUT_PORT_TYPE
rx_done_tick <= q_done_tick.DB_MAX_OUTPUT_PORT_TYPE
parity_err <= q_parity_err.DB_MAX_OUTPUT_PORT_TYPE


|uart|uart_tx:uart_tx_blk
clk => q_parity_bit.CLK
clk => q_tx_done_tick.CLK
clk => q_tx.CLK
clk => q_data_bit_idx[0].CLK
clk => q_data_bit_idx[1].CLK
clk => q_data_bit_idx[2].CLK
clk => q_data[0].CLK
clk => q_data[1].CLK
clk => q_data[2].CLK
clk => q_data[3].CLK
clk => q_data[4].CLK
clk => q_data[5].CLK
clk => q_data[6].CLK
clk => q_data[7].CLK
clk => q_baud_clk_tick_cnt[0].CLK
clk => q_baud_clk_tick_cnt[1].CLK
clk => q_baud_clk_tick_cnt[2].CLK
clk => q_baud_clk_tick_cnt[3].CLK
clk => q_state~1.DATAIN
reset => q_parity_bit.ACLR
reset => q_tx_done_tick.ACLR
reset => q_tx.PRESET
reset => q_data_bit_idx[0].ACLR
reset => q_data_bit_idx[1].ACLR
reset => q_data_bit_idx[2].ACLR
reset => q_data[0].ACLR
reset => q_data[1].ACLR
reset => q_data[2].ACLR
reset => q_data[3].ACLR
reset => q_data[4].ACLR
reset => q_data[5].ACLR
reset => q_data[6].ACLR
reset => q_data[7].ACLR
reset => q_baud_clk_tick_cnt[0].ACLR
reset => q_baud_clk_tick_cnt[1].ACLR
reset => q_baud_clk_tick_cnt[2].ACLR
reset => q_baud_clk_tick_cnt[3].ACLR
reset => q_state~3.DATAIN
baud_clk_tick => d_baud_clk_tick_cnt.OUTPUTSELECT
baud_clk_tick => d_baud_clk_tick_cnt.OUTPUTSELECT
baud_clk_tick => d_baud_clk_tick_cnt.OUTPUTSELECT
baud_clk_tick => d_baud_clk_tick_cnt.OUTPUTSELECT
baud_clk_tick => always1.IN1
tx_start => always1.IN1
tx_data[0] => d_data.DATAB
tx_data[1] => d_data.DATAB
tx_data[2] => d_data.DATAB
tx_data[3] => d_data.DATAB
tx_data[4] => d_data.DATAB
tx_data[5] => d_data.DATAB
tx_data[6] => d_data.DATAB
tx_data[7] => d_data.DATAB
tx_done_tick <= q_tx_done_tick.DB_MAX_OUTPUT_PORT_TYPE
tx <= q_tx.DB_MAX_OUTPUT_PORT_TYPE


|uart|fifo:uart_rx_fifo
clk => q_data_array.we_a.CLK
clk => q_data_array.waddr_a[2].CLK
clk => q_data_array.waddr_a[1].CLK
clk => q_data_array.waddr_a[0].CLK
clk => q_data_array.data_a[7].CLK
clk => q_data_array.data_a[6].CLK
clk => q_data_array.data_a[5].CLK
clk => q_data_array.data_a[4].CLK
clk => q_data_array.data_a[3].CLK
clk => q_data_array.data_a[2].CLK
clk => q_data_array.data_a[1].CLK
clk => q_data_array.data_a[0].CLK
clk => q_full.CLK
clk => q_empty.CLK
clk => q_wr_ptr[0].CLK
clk => q_wr_ptr[1].CLK
clk => q_wr_ptr[2].CLK
clk => q_rd_ptr[0].CLK
clk => q_rd_ptr[1].CLK
clk => q_rd_ptr[2].CLK
clk => q_data_array.CLK0
reset => q_rd_ptr.OUTPUTSELECT
reset => q_rd_ptr.OUTPUTSELECT
reset => q_rd_ptr.OUTPUTSELECT
reset => q_wr_ptr.OUTPUTSELECT
reset => q_wr_ptr.OUTPUTSELECT
reset => q_wr_ptr.OUTPUTSELECT
reset => q_empty.OUTPUTSELECT
reset => q_full.OUTPUTSELECT
reset => q_data_array.we_a.DATAIN
reset => q_data_array.WE
rd_en => rd_en_prot.IN1
wr_en => wr_en_prot.IN1
wr_data[0] => d_data[0].DATAB
wr_data[1] => d_data[1].DATAB
wr_data[2] => d_data[2].DATAB
wr_data[3] => d_data[3].DATAB
wr_data[4] => d_data[4].DATAB
wr_data[5] => d_data[5].DATAB
wr_data[6] => d_data[6].DATAB
wr_data[7] => d_data[7].DATAB
rd_data[0] <= q_data_array.PORTBDATAOUT
rd_data[1] <= q_data_array.PORTBDATAOUT1
rd_data[2] <= q_data_array.PORTBDATAOUT2
rd_data[3] <= q_data_array.PORTBDATAOUT3
rd_data[4] <= q_data_array.PORTBDATAOUT4
rd_data[5] <= q_data_array.PORTBDATAOUT5
rd_data[6] <= q_data_array.PORTBDATAOUT6
rd_data[7] <= q_data_array.PORTBDATAOUT7
full <= q_full.DB_MAX_OUTPUT_PORT_TYPE
empty <= q_empty.DB_MAX_OUTPUT_PORT_TYPE


|uart|fifo:uart_tx_fifo
clk => q_data_array.we_a.CLK
clk => q_data_array.waddr_a[2].CLK
clk => q_data_array.waddr_a[1].CLK
clk => q_data_array.waddr_a[0].CLK
clk => q_data_array.data_a[7].CLK
clk => q_data_array.data_a[6].CLK
clk => q_data_array.data_a[5].CLK
clk => q_data_array.data_a[4].CLK
clk => q_data_array.data_a[3].CLK
clk => q_data_array.data_a[2].CLK
clk => q_data_array.data_a[1].CLK
clk => q_data_array.data_a[0].CLK
clk => q_full.CLK
clk => q_empty.CLK
clk => q_wr_ptr[0].CLK
clk => q_wr_ptr[1].CLK
clk => q_wr_ptr[2].CLK
clk => q_rd_ptr[0].CLK
clk => q_rd_ptr[1].CLK
clk => q_rd_ptr[2].CLK
clk => q_data_array.CLK0
reset => q_rd_ptr.OUTPUTSELECT
reset => q_rd_ptr.OUTPUTSELECT
reset => q_rd_ptr.OUTPUTSELECT
reset => q_wr_ptr.OUTPUTSELECT
reset => q_wr_ptr.OUTPUTSELECT
reset => q_wr_ptr.OUTPUTSELECT
reset => q_empty.OUTPUTSELECT
reset => q_full.OUTPUTSELECT
reset => q_data_array.we_a.DATAIN
reset => q_data_array.WE
rd_en => rd_en_prot.IN1
wr_en => wr_en_prot.IN1
wr_data[0] => d_data[0].DATAB
wr_data[1] => d_data[1].DATAB
wr_data[2] => d_data[2].DATAB
wr_data[3] => d_data[3].DATAB
wr_data[4] => d_data[4].DATAB
wr_data[5] => d_data[5].DATAB
wr_data[6] => d_data[6].DATAB
wr_data[7] => d_data[7].DATAB
rd_data[0] <= q_data_array.PORTBDATAOUT
rd_data[1] <= q_data_array.PORTBDATAOUT1
rd_data[2] <= q_data_array.PORTBDATAOUT2
rd_data[3] <= q_data_array.PORTBDATAOUT3
rd_data[4] <= q_data_array.PORTBDATAOUT4
rd_data[5] <= q_data_array.PORTBDATAOUT5
rd_data[6] <= q_data_array.PORTBDATAOUT6
rd_data[7] <= q_data_array.PORTBDATAOUT7
full <= q_full.DB_MAX_OUTPUT_PORT_TYPE
empty <= q_empty.DB_MAX_OUTPUT_PORT_TYPE


