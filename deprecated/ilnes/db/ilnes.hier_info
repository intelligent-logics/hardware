|uart_tx
data_transmitter << shiftregister:txshiftregister.data_transmit
clk => clk.IN1
data_transmit_register[0] => data_transmit_register[0].IN1
data_transmit_register[1] => data_transmit_register[1].IN1
data_transmit_register[2] => data_transmit_register[2].IN1
data_transmit_register[3] => data_transmit_register[3].IN1
data_transmit_register[4] => data_transmit_register[4].IN1
data_transmit_register[5] => data_transmit_register[5].IN1
data_transmit_register[6] => data_transmit_register[6].IN1
data_transmit_register[7] => data_transmit_register[7].IN1
shiftout => state.DATAB
shiftout => Selector0.IN2
rstn => rstn.IN1
data_transmitted_signal << data_transmitted_signal~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[0] << current_state.DB_MAX_OUTPUT_PORT_TYPE
current_state[1] << current_state.DB_MAX_OUTPUT_PORT_TYPE


|uart_tx|shiftregister:txshiftregister
data_recieve => shift_register.DATAB
data_transmit <= data_transmit~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[0] <= parallel_output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[1] <= parallel_output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[2] <= parallel_output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[3] <= parallel_output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[4] <= parallel_output[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[5] <= parallel_output[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[6] <= parallel_output[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_output[7] <= parallel_output[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
parallel_input[0] => shift_register.DATAB
parallel_input[1] => shift_register.DATAB
parallel_input[2] => shift_register.DATAB
parallel_input[3] => shift_register.DATAB
parallel_input[4] => shift_register.DATAB
parallel_input[5] => shift_register.DATAB
parallel_input[6] => shift_register.DATAB
parallel_input[7] => shift_register.DATAB
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => shift_register.OUTPUTSELECT
shift => data_transmit.OUTPUTSELECT
shift => parallel_output[7]~reg0.ENA
shift => parallel_output[6]~reg0.ENA
shift => parallel_output[5]~reg0.ENA
shift => parallel_output[4]~reg0.ENA
shift => parallel_output[3]~reg0.ENA
shift => parallel_output[2]~reg0.ENA
shift => parallel_output[1]~reg0.ENA
shift => parallel_output[0]~reg0.ENA
parallel_enable => always0.IN0
parallel_enable => always0.IN0
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => data_transmit.OUTPUTSELECT
direction => always0.IN1
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => shift_register.OUTPUTSELECT
direction => data_transmit.OUTPUTSELECT
direction => always0.IN1
clk => data_transmit~reg0.CLK
clk => parallel_output[0]~reg0.CLK
clk => parallel_output[1]~reg0.CLK
clk => parallel_output[2]~reg0.CLK
clk => parallel_output[3]~reg0.CLK
clk => parallel_output[4]~reg0.CLK
clk => parallel_output[5]~reg0.CLK
clk => parallel_output[6]~reg0.CLK
clk => parallel_output[7]~reg0.CLK
clk => shift_register[0].CLK
clk => shift_register[1].CLK
clk => shift_register[2].CLK
clk => shift_register[3].CLK
clk => shift_register[4].CLK
clk => shift_register[5].CLK
clk => shift_register[6].CLK
clk => shift_register[7].CLK
rstn => parallel_output[0]~reg0.ACLR
rstn => parallel_output[1]~reg0.ACLR
rstn => parallel_output[2]~reg0.ACLR
rstn => parallel_output[3]~reg0.ACLR
rstn => parallel_output[4]~reg0.ACLR
rstn => parallel_output[5]~reg0.ACLR
rstn => parallel_output[6]~reg0.ACLR
rstn => parallel_output[7]~reg0.ACLR
rstn => shift_register[0].ACLR
rstn => shift_register[1].ACLR
rstn => shift_register[2].ACLR
rstn => shift_register[3].ACLR
rstn => shift_register[4].ACLR
rstn => shift_register[5].ACLR
rstn => shift_register[6].ACLR
rstn => shift_register[7].ACLR
rstn => data_transmit~reg0.ENA


